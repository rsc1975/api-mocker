name: Building
on:
  workflow_call:
    outputs:
      APP_NAME:
        description: "App version"
        value: ${{ jobs.build.outputs.APP_NAME }}
      APP_VERSION:
        description: "App version"
        value: ${{ jobs.build.outputs.APP_VERSION }}  

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      APP_NAME: ${{ steps.set_vars.outputs.name }}
      APP_VERSION: ${{ steps.set_vars.outputs.version }}    
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
              ls ${{ github.workspace }}
              cd ${{ github.workspace }}
      - uses: actions/setup-node@v3
        with:
          node-version: 16       
      - run: npm ci       
      - run: npm run build --if-present
      - run: |
              echo "APP_VERSION=$(npm run --silent version)" >> $GITHUB_ENV
              echo APP_NAME=$(node -p "require('./package.json').name") >> $GITHUB_ENV              
      - id: set_vars
        run: |
              echo "::set-output name=version::${{ env.APP_VERSION}}"
              echo "::set-output name=name::${{ env.APP_NAME }}"
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-with-dockerfile
          retention-days: 1
          path: |
                dist
                Dockerfile
      - name: "Show result: ${{ job.status }}"
        run: |
              if [[ "${{ job.status }}" == "success" ]]; then
                  echo "🎉 This job's status is ${{ job.status }} 👍."
              else
                  echo "😥 This job's status is ${{ job.status }} 👎."
              fi

